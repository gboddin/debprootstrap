#!/bin/bash

#build a userland/debian from root/whatever, enjoy, you need sudo


#go where I should be ...
MY_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd $MY_DIR

#setup dir :
[ -d build ]||mkdir -p build/debootstrap 
[ -d debootstrap ]&&rm -Rf debootstrap
mkdir debootstrap

# a few binary deps

STATIC_PROOT=http://static.proot.me/proot-x86_64

# sorry, mirror.as35701. you're providing an easy way to get the latest package :')

STATIC_CDEBOOTSTRAP_PACKAGE=http://http.debian.net/debian/pool/main/c/cdebootstrap/$(wget "http://mirror.as35701.net/debian/pool/main/c/cdebootstrap/?C=M;O=D" -qO -|grep amd64|grep static|head -1|cut -d\" -f8)


echo Getting static debootstrap $STATIC_CDEBOOTSTRAP_PACKAGE ...
wget $STATIC_CDEBOOTSTRAP_PACKAGE -q -O debootstrap/debootstrap.deb
echo Extracting static deboostrap from deb package ...
CDB_STATIC_TAR=$(ar p debootstrap/debootstrap.deb data.tar.xz|tar JxvC debootstrap|grep "tar.gz$")
tar -xzf debootstrap/${CDB_STATIC_TAR} -C build/debootstrap 
[ -f proot-amd64 ]||(echo Getting static proot $STATIC_PROOT ...&&wget $STATIC_PROOT -qO proot-amd64)
[ -x proot-amd64 ]||chmod +x proot-amd64
# TODO cdebootstrap still requires root for unshare ... to investigate
echo And bootstrapping debian to build folder ...
sudo build/debootstrap/cdebootstrap --flavour=minimal jessie build http://http.debian.net/debian
echo Resetting uid to building user ...
sudo chown --reference=${HOME} build -R
echo Installing start scripts into container ...
cp proot-amd64 build/proot
cp lib/*sh build
echo Build is ready, creating rootfs tar ...
tar cz build > build.tar.gz

